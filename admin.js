// üî• admin.js –µ –∑–∞—Ä–µ–¥–µ–Ω –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!

document.addEventListener("DOMContentLoaded", function () {
    const menuButtons = document.querySelectorAll(".menu-button");
    const contentContainer = document.getElementById("admin-content");
    const addProductButton = document.getElementById("add-product-btn");
    const saveProductButton = document.getElementById("save-product-btn");
    const productList = document.getElementById("product-list");

    // üëâ –ó–∞—Ä–µ–∂–¥–∞ HTML —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ –∏ —Å—ä–æ—Ç–≤–µ—Ç–Ω–∏—è JS –º–æ–¥—É–ª
    function loadContent(section, params = "") {
        console.log(`üõ†Ô∏è –û–ø–∏—Ç –∑–∞ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞: admin-sections/${section}.html`);
        const sectionPath = `admin-sections/${section}.html${params}`;

        fetch(sectionPath)
            .then(response => {
                if (!response.ok) throw new Error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ HTML");
                return response.text();
            })
            .then(html => {
                contentContainer.innerHTML = html;
                console.log(`‚úÖ –ó–∞—Ä–µ–¥–µ–Ω–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ: ${section}.html`);

                const scriptMap = {
                    "orders": "scripts/orders.js",
                    "products": "scripts/products.js",
                    "messages": "scripts/messages.js",
                    "view-message": "scripts/view-message.js"
                };
                const funcMap = {
                    "orders": "loadOrders",
                    "products": "loadProducts",
                    "messages": "loadMessages",
                    "view-message": "loadViewMessage"
                };

                if (scriptMap[section]) {
                    loadScript(scriptMap[section]).then(() => {
                        const fn = window[funcMap[section]];
                        if (typeof fn === "function") fn();
                    });
                }
            })
            .catch(error => console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ:", error));
    }

    // üëâ –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –±—Ä–æ—è—á–∏ –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏—è –∏ –ø–æ—Ä—ä—á–∫–∏
    function updateMenuCounters() {
        Promise.all([
            fetch("https://api.dp-design.art/api/messages").then(res => res.json()),
            fetch("https://api.dp-design.art/api/orders").then(res => res.json())
        ])
        .then(([messages, orders]) => {
            const unreadMessages = Array.isArray(messages) ? messages.filter(m => !m.is_read).length : 0;
            const unreadOrders = Array.isArray(orders) ? orders.filter(o => !o.is_read).length : 0;

            const msgCounter = document.getElementById("msg-counter");
            const orderCounter = document.getElementById("order-counter");

            if (msgCounter) {
                msgCounter.textContent = unreadMessages || "";
                msgCounter.style.display = unreadMessages > 0 ? "inline-flex" : "none";
            }
            if (orderCounter) {
                orderCounter.textContent = unreadOrders || "";
                orderCounter.style.display = unreadOrders > 0 ? "inline-flex" : "none";
            }

            console.log("üîÑ –û–±–Ω–æ–≤–µ–Ω–∏ –±—Ä–æ—è—á–∏:", { unreadMessages, unreadOrders });
        })
        .catch(err => {
            console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –±—Ä–æ—è—á–∏:", err);
            const msgCounter = document.getElementById("msg-counter");
            const orderCounter = document.getElementById("order-counter");
            if (msgCounter) msgCounter.style.display = "none";
            if (orderCounter) orderCounter.style.display = "none";
        });
    }

    // üëâ –ó–∞—Ä–µ–∂–¥–∞ JS —Å–∫—Ä–∏–ø—Ç–æ–≤–µ –¥–∏–Ω–∞–º–∏—á–Ω–æ –∏ –≤—Ä—ä—â–∞ Promise
    function loadScript(src) {
        return new Promise((resolve, reject) => {
            const existing = document.querySelector(`script[src="${src}"]`);
            if (existing) return resolve();
            const script = document.createElement("script");
            script.src = src;
            script.defer = true;
            script.onload = () => resolve();
            script.onerror = () => reject(new Error(`–ù–µ—É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ ${src}`));
            document.body.appendChild(script);
        });
    }

    // üëâ –ú–µ–Ω—é –±—É—Ç–æ–Ω–∏
    menuButtons.forEach(button => {
        button.addEventListener("click", function () {
            menuButtons.forEach(btn => btn.classList.remove("active"));
            this.classList.add("active");
            const section = this.getAttribute("data-section");
            loadContent(section);
        });
    });

    // üëâ –ë—É—Ç–æ–Ω "–î–æ–±–∞–≤–∏ –ø—Ä–æ–¥—É–∫—Ç"
    if (addProductButton) {
        addProductButton.addEventListener("click", () => loadContent("add-product"));
    }

    // üëâ –ë—É—Ç–æ–Ω "–ó–∞–ø–∞–∑–∏ –ø—Ä–æ–¥—É–∫—Ç"
    if (saveProductButton) {
        saveProductButton.addEventListener("click", function (event) {
            event.preventDefault();
            console.log("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ä—Ç –µ –∑–∞–ø–∞–∑–µ–Ω!");
            window.location.href = "admin.html?section=products";
        });
    }

    // üëâ –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ (–∞–∫–æ –µ–ª–µ–º–µ–Ω—Ç—ä—Ç —Å—ä—â–µ—Å—Ç–≤—É–≤–∞)
    if (productList) {
        (async function () {
            try {
                const response = await fetch("https://api.dp-design.art/products");
                const products = await response.json();

                if (products.length === 0) {
                    productList.innerHTML = "<p>‚ùå –ù—è–º–∞ –Ω–∞–ª–∏—á–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏.</p>";
                    return;
                }

                productList.innerHTML = "";
                products.forEach(product => {
                    const item = document.createElement("div");
                    item.classList.add("product-item");
                    item.innerHTML = `
                        <p><strong>${product.name}</strong></p>
                        <p>–¶–µ–Ω–∞: ${product.price} –ª–≤.</p>
                        <p>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category || "–ù—è–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è"}</p>
                        <button class="edit-btn" data-id="${product.id}">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ</button>
                        <button class="delete-btn" data-id="${product.id}">üóëÔ∏è –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ</button>
                    `;
                    productList.appendChild(item);
                });

                document.querySelectorAll(".edit-btn").forEach(btn => {
                    btn.addEventListener("click", function () {
                        const id = this.getAttribute("data-id");
                        window.location.href = `edit-product.html?id=${id}`;
                    });
                });

                document.querySelectorAll(".delete-btn").forEach(btn => {
                    btn.addEventListener("click", async function () {
                        const id = this.getAttribute("data-id");
                        if (confirm("‚ùó –°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ, —á–µ –∏—Å–∫–∞—Ç–µ –¥–∞ –∏–∑—Ç—Ä–∏–µ—Ç–µ —Ç–æ–∑–∏ –ø—Ä–æ–¥—É–∫—Ç?")) {
                            await deleteProduct(id);
                        }
                    });
                });
            } catch (error) {
                console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏—Ç–µ:", error);
                productList.innerHTML = "<p>‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏—Ç–µ.</p>";
            }
        })();
    }

    // üëâ –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç
    async function deleteProduct(productId) {
        try {
            const response = await fetch(`https://api.dp-design.art/products/${productId}`, {
                method: "DELETE",
                headers: {
                    "Authorization": `Bearer ${localStorage.getItem("token")}`,
                    "Content-Type": "application/json"
                }
            });
            if (response.ok) {
                alert("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ä—Ç –±–µ—à–µ –∏–∑—Ç—Ä–∏—Ç —É—Å–ø–µ—à–Ω–æ!");
                location.reload();
            } else {
                alert("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞.");
            }
        } catch (error) {
            console.error("–ì—Ä–µ—à–∫–∞:", error);
            alert("‚ö†Ô∏è –í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ—Ç–æ.");
        }
    }

    // üëâ –°–µ–ª–µ–∫—Ü–∏—è –Ω–∞ —Ä–µ–¥ –æ—Ç —Ç–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–æ–¥—É–∫—Ç–∏
    document.querySelectorAll(".product-row").forEach(row => {
        row.addEventListener("click", function () {
            document.querySelectorAll(".product-row").forEach(r => r.classList.remove("selected"));
            this.classList.add("selected");
            console.log("‚úÖ –ò–∑–±—Ä–∞–Ω –ø—Ä–æ–¥—É–∫—Ç:", this.querySelector("td:nth-child(3)")?.textContent);
        });
    });

    // üëâ –°—Ç–∞—Ä—Ç–æ–≤–∞ —Å–µ–∫—Ü–∏—è –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ
    if (contentContainer) {
        loadContent("dashboard");
    }
});
