// scripts/search-results.js

async function waitForElement(selector, timeout = 1000) {
  return new Promise((resolve, reject) => {
    const start = Date.now();
    const interval = setInterval(() => {
      const element = document.querySelector(selector);
      if (element) {
        clearInterval(interval);
        resolve(element);
      } else if (Date.now() - start >= timeout) {
        clearInterval(interval);
        reject(`‚è±Ô∏è Timeout: ${selector} –Ω–µ —Å–µ –∑–∞—Ä–µ–¥–∏ –Ω–∞–≤—Ä–µ–º–µ`);
      }
    }, 50);
  });
}

function highlightMatch(text, query) {
  const escaped = query.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
  const regex = new RegExp(escaped, 'gi');
  return text.replace(regex, match => `<mark>${match}</mark>`);
}

function createProductCard(product, query) {
  const name = highlightMatch(product.name, query);
  const short = highlightMatch(product.shortDescription || "", query);
  const price = product.promo
    ? `<span class="price old">${parseFloat(product.price).toFixed(2)} –ª–≤</span> <span class="price promo">${parseFloat(product.promo).toFixed(2)} –ª–≤</span>`
    : `<span class="price">${parseFloat(product.price).toFixed(2)} –ª–≤</span>`;
  const promoBadge = product.promo ? `<span class="promo-badge">–ü—Ä–æ–º–æ</span>` : "";

  return `
    <div class="search-card">
      <div class="search-card-image">
        <img src="${product.image}" alt="${product.name}">
      </div>
      <div class="search-card-info">
        <h3>${name} ${promoBadge}</h3>
        <p>${short}</p>
        <div class="search-card-footer">
          ${price}
          <a class="search-view-btn" href="product-template.html?id=${product.id}">–í–∏–∂ –æ—â–µ</a>
        </div>
      </div>
    </div>
  `;
}

async function initSearchResults() {
  console.log("üîé –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ –æ—Ç —Ç—ä—Ä—Å–∞—á–∫–∞—Ç–∞...");

  try {
    const params = new URLSearchParams(window.location.search);
    const query = params.get("q")?.trim();
    if (!query) return;

    const title = document.getElementById("search-results-title");
    if (title) {
      title.innerHTML = `–¢—ä—Ä—Å–µ–Ω–µ –ø–æ: "<strong>${query}</strong>"`;
    }

    const res = await fetch("https://api.dp-design.art/products");
    if (!res.ok) throw new Error("–ù–µ—É—Å–ø–µ—à–Ω–∞ –∑–∞—è–≤–∫–∞ –∫—ä–º API");
    const products = await res.json();

    const filtered = products.filter(p =>
      (p.name && p.name.toLowerCase().includes(query.toLowerCase())) ||
      (p.shortDescription && p.shortDescription.toLowerCase().includes(query.toLowerCase()))
    );

    const container = document.getElementById("search-results-container");
    if (!container) return console.error("‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –∑–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω!");

    if (filtered.length === 0) {
      container.innerHTML = `<p class="no-results">‚ùå –ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏.</p>`;
    } else {
      container.innerHTML = filtered.map(p => createProductCard(p, query)).join("");
      console.log(`‚úÖ –ù–∞–º–µ—Ä–µ–Ω–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏: ${filtered.length}`);
    }

  } catch (err) {
    console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ:", err);
    const container = document.getElementById("search-results-container");
    if (container) {
      container.innerHTML = `<p class="no-results">‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ.</p>`;
    }
  }
}

// ‚úÖ –ò–∑—á–∞–∫–≤–∞–º–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏—Ç–µ –∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ
document.addEventListener("DOMContentLoaded", () => {
  waitForElement("#header", 2000)
    .then(() => {
      console.log("‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏—Ç–µ —Å–∞ –∑–∞—Ä–µ–¥–µ–Ω–∏ ‚Äì —Å—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ");
      initSearchResults();
    })
    .catch(err => {
      console.warn("‚ö†Ô∏è Header –Ω–µ –±–µ—à–µ –Ω–∞–º–µ—Ä–µ–Ω –Ω–∞–≤—Ä–µ–º–µ:", err);
      initSearchResults(); // –û–ø–∏—Ç–≤–∞–º–µ –¥–æ—Ä–∏ –∏ –±–µ–∑ —Ö–µ–¥—ä—Ä–∞
    });
});
